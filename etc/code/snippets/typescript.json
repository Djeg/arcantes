{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Génére un model, type et schéma zod": {
		"prefix": "zodmod",
		"description": "Génére un schéma, model et type zod",
		"body": [
			"/**",
			" * ${1:Name}Model",
			" */",
			"export const $1Model = z.$0",
			"",
			"/**",
			" * Type of $1Model",
			" */",
			"export type $1Type = z.infer<typeof $1Model>",
			"",
			"/**",
			" * Schema $1Model",
			" */",
			"export const $1Schema = zodToJsonSchema($1Model)",
		]
	},
	"Génére une description de module": {
		"prefix": "modoc",
		"description": "Generate a module description",
		"body": [
			"/**",
			" * @module ${TM_FILENAME_BASE}",
			" *",
			" * @description",
			" *  $1",
			" */",
			"$0"
		]
	},
	"Generate a documented function": {
		"prefix": "fun",
		"description": "Generate a documented function",
		"body": [
			"/**",
			" * $1",
			" */",
			"export function ${2:name}($3) {",
			"\t$0",
			"}"
		]
	},
	"Generate a documented async function": {
		"prefix": "afun",
		"description": "Generate a documented function",
		"body": [
			"/**",
			" * $1",
			" */",
			"export async function ${2:name}($3) {",
			"\t$0",
			"}"
		]
	},
	"Generate a fastify route": {
		"prefix": "fsro",
		"description": "Generates a fastify route",
		"body": [
			"/**",
			" * $1",
			" */",
			"app.${2:get}(",
			"\t'${3:/resource}',",
			"\t{ schema: { $4 } },",
			"\tasync (request, reply) => {",
			"\t\t$0",
			"\t}",
			")"
		]
	}
}