#!/usr/bin/env node
const fs = require('node:fs/promises')
const readline = require('node:readline')
const { stdin: input, stdout: output } = require('node:process')

const rl = readline.createInterface({ input, output })

const DEV_FILE_PATH = `${process.env.HOME}/.dev`

const main = async () => {
  console.log('> Name your dev file (ex: .gitgnore):')
  const filename = await question('> ')

  if (!(await isDir(`${DEV_FILE_PATH}/${filename}`))) {
    await fs.mkdir(`${DEV_FILE_PATH}/${filename}`)
  }

  console.log('> Name your dev template name (ex: personalgitignore):')
  const template = await question('> ')

  if (await isFile(`${DEV_FILE_PATH}/${filename}/${template}`)) {
    throw new Error(`Template ${template} already exists :/`)
  }

  await fs.writeFile(`${DEV_FILE_PATH}/${filename}/${template}`, '', {
    encoding: 'utf8',
  })

  console.log('> done')
}

const isFile = path =>
  fs
    .stat(path)
    .then(s => !s.isDirectory())
    .catch(() => false)

const isDir = path =>
  fs
    .stat(path)
    .then(s => s.isDirectory())
    .catch(() => false)

const question = q => new Promise(r => rl.question(q, r))

main()
  .then(() => process.exit(0))
  .catch(e => {
    console.error(e)
    process.exit(1)
  })
